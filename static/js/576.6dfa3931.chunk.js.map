{"version":3,"file":"static/js/576.6dfa3931.chunk.js","mappings":"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","sources":["api/themoviedb.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '34a3f3c9cce4f4b9cc46f3708ad7a6e9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\naxios.defaults.headers = 'Access-Control-Allow-Origin';\n\nexport const fetchTrends = async () => {\n  try {\n    const { data } = await axios.get('/trending/movie/day');\n    return data.results;\n  } catch (error) {\n    window.alert('fetch trend');\n  }\n};\n\nexport const fetchData = async query => {\n  try {\n    const { data } = await axios.get(`/search/movie?${API_KEY}query=${query}`);\n\n    return data.results;\n  } catch (error) {\n    window.alert(error);\n    return [];\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    window.alert(error);\n    return [];\n  }\n};\n\nexport const fetchMovieImage = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/images`);\n    return data;\n  } catch (error) {\n    window.alert(error);\n    return [];\n  }\n};\n\nexport const fetchMovieReview = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    window.alert(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const { data } = await axios.get(`movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    window.alert(error);\n  }\n};\n\nexport const fetchMovieByQuery = async query => {\n  try {\n    const { data } = await axios.get(`/search/movie?query=${query}`);\n    return data.results;\n  } catch (error) {\n    window.alert(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchBar_input__bIy50\",\"button\":\"SearchBar_button__T7RTc\"};","import { useState } from 'react';\nimport css from './SearchBar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return;\n    }\n    onSubmit(query);\n\n    setQuery('');\n  };\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={handleSearchSubmit}>\n        <button className={css.button} type=\"submit\">\n          <span className={css.label}>Search</span>\n        </button>\n        <input\n          className={css.input}\n          value={query}\n          onChange={handleInputChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Please enter movie's name\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Searchbar;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\"};","import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\nconst MoviesList = ({ list }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {list &&\n        list.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      ;\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\n// MoviesList.propTypes = {\n//   list: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string.isRequired,\n//     })\n//   ),\n// };\n","import { Loader } from 'components/Loader/Loader';\nimport { fetchMovieByQuery } from 'api/themoviedb';\nimport { useSearchParams, useNavigate, useParams } from 'react-router-dom';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport Searchbar from 'components/SearchBar/SearchBar';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  const [searchParams] = useSearchParams();\n\n  const navigate = useNavigate();\n\n  const handleSearchSubmit = useCallback(\n    async query => {\n      try {\n        setIsLoading(true);\n        const results = await fetchMovieByQuery(query);\n        setSearchQuery(results);\n        searchParams.set('query', query);\n        navigate(`/movies?${searchParams.toString()}`);\n        setIsLoading(false);\n      } catch (error) {\n        console.log('error', error);\n        setSearchQuery([]);\n      }\n    },\n    [navigate, searchParams]\n  );\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!movieId) return;\n      try {\n        const results = await fetchMovieByQuery(movieId);\n        setSearchQuery(results);\n      } catch (error) {\n        console.log('error', error);\n        setSearchQuery([]);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      handleSearchSubmit(query);\n    }\n  }, [searchParams, handleSearchSubmit]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n  return (\n    <>\n      {/* <form className={css.form} onSubmit={handleSearchSubmit}>\n        <button className={css.button} type=\"submit\">\n          <span className={css.label}>Search</span>\n        </button>\n        <input\n          className={css.input}\n          value={searchQuery}\n          // onChange={handleChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form> */}\n      <Searchbar onSubmit={handleSearchSubmit} />\n      <MoviesList list={searchQuery} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","defaults","baseURL","params","api_key","language","headers","fetchTrends","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","get","sent","abrupt","results","t0","window","alert","stop","apply","arguments","fetchMovieDetails","_ref3","_callee3","id","_yield$axios$get3","_context3","concat","_x2","fetchMovieReview","_ref5","_callee5","_yield$axios$get5","_context5","_x4","fetchMovieCast","_ref6","_callee6","_yield$axios$get6","_context6","cast","_x5","fetchMovieByQuery","_ref7","_callee7","query","_yield$axios$get7","_context7","_x6","Loader","_jsx","className","css","children","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","onSubmit","_useState","useState","_useState2","_slicedToArray","setQuery","_jsxs","form","e","preventDefault","trim","button","type","label","input","value","onChange","target","autoComplete","autoFocus","placeholder","list","location","useLocation","map","_ref2","title","Link","to","state","from","searchQuery","setSearchQuery","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","_useSearchParams","useSearchParams","searchParams","navigate","useNavigate","handleSearchSubmit","useCallback","set","toString","console","log","_x","useEffect","fetchMovies","_callee2","_context2","_Fragment","Searchbar","MoviesList"],"sourceRoot":""}